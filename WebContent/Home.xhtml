<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui">

<f:view contentType="text/html">
	<h:head>
		<f:facet name="first">
			<meta content='text/html; charset=UTF-8' http-equiv="Content-Type" />
			<title>Security</title>
		</f:facet>
		<link rel="stylesheet" type="text/css" href="assets/css/home.css"></link>

		<style>
body {
	margin: 0;
	padding: 0;
}

.container {
	margin-right: auto;
	margin-left: auto;
	padding-left: 15px;
	padding-right: 15px
}

@media ( min-width :768px) {
	.container {
		width: 750px
	}
}

@media ( min-width :992px) {
	.container {
		width: 970px
	}
}

@media ( min-width :1200px) {
	.container {
		width: 1170px
	}
}

.row {
	margin-left: -15px;
	margin-right: -15px
}

.container {
	margin-right: auto;
	margin-left: auto;
	padding-left: 15px;
	padding-right: 15px
}

@media ( min-width :768px) {
	.container {
		width: 750px
	}
}

@media ( min-width :992px) {
	.container {
		width: 970px
	}
}

@media ( min-width :1200px) {
	.container {
		width: 1170px
	}
}

.container-fluid {
	margin-right: auto;
	margin-left: auto;
	padding-left: 15px;
	padding-right: 15px
}

.row {
	margin-left: -15px;
	margin-right: -15px
}

.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2,
	.col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3,
	.col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5,
	.col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6,
	.col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8,
	.col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9,
	.col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11,
	.col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12
	{
	position: relative;
	min-height: 1px;
	padding-left: 15px;
	padding-right: 15px
}

.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6,
	.col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 {
	float: left
}

.col-xs-12 {
	width: 100%
}

.col-xs-11 {
	width: 91.66666667%
}

.col-xs-10 {
	width: 83.33333333%
}

.col-xs-9 {
	width: 75%
}

.col-xs-8 {
	width: 66.66666667%
}

.col-xs-7 {
	width: 58.33333333%
}

.col-xs-6 {
	width: 50%
}

.col-xs-5 {
	width: 41.66666667%
}

.col-xs-4 {
	width: 33.33333333%
}

.col-xs-3 {
	width: 25%
}

.col-xs-2 {
	width: 16.66666667%
}

.col-xs-1 {
	width: 8.33333333%
}

.col-xs-pull-12 {
	right: 100%
}

.col-xs-pull-11 {
	right: 91.66666667%
}

.col-xs-pull-10 {
	right: 83.33333333%
}

.col-xs-pull-9 {
	right: 75%
}

.col-xs-pull-8 {
	right: 66.66666667%
}

.col-xs-pull-7 {
	right: 58.33333333%
}

.col-xs-pull-6 {
	right: 50%
}

.col-xs-pull-5 {
	right: 41.66666667%
}

.col-xs-pull-4 {
	right: 33.33333333%
}

.col-xs-pull-3 {
	right: 25%
}

.col-xs-pull-2 {
	right: 16.66666667%
}

.col-xs-pull-1 {
	right: 8.33333333%
}

.col-xs-pull-0 {
	right: auto
}

.col-xs-push-12 {
	left: 100%
}

.col-xs-push-11 {
	left: 91.66666667%
}

.col-xs-push-10 {
	left: 83.33333333%
}

.col-xs-push-9 {
	left: 75%
}

.col-xs-push-8 {
	left: 66.66666667%
}

.col-xs-push-7 {
	left: 58.33333333%
}

.col-xs-push-6 {
	left: 50%
}

.col-xs-push-5 {
	left: 41.66666667%
}

.col-xs-push-4 {
	left: 33.33333333%
}

.col-xs-push-3 {
	left: 25%
}

.col-xs-push-2 {
	left: 16.66666667%
}

.col-xs-push-1 {
	left: 8.33333333%
}

.col-xs-push-0 {
	left: auto
}

.col-xs-offset-12 {
	margin-left: 100%
}

.col-xs-offset-11 {
	margin-left: 91.66666667%
}

.col-xs-offset-10 {
	margin-left: 83.33333333%
}

.col-xs-offset-9 {
	margin-left: 75%
}

.col-xs-offset-8 {
	margin-left: 66.66666667%
}

.col-xs-offset-7 {
	margin-left: 58.33333333%
}

.col-xs-offset-6 {
	margin-left: 50%
}

.col-xs-offset-5 {
	margin-left: 41.66666667%
}

.col-xs-offset-4 {
	margin-left: 33.33333333%
}

.col-xs-offset-3 {
	margin-left: 25%
}

.col-xs-offset-2 {
	margin-left: 16.66666667%
}

.col-xs-offset-1 {
	margin-left: 8.33333333%
}

.col-xs-offset-0 {
	margin-left: 0
}

@media ( min-width :768px) {
	.col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6,
		.col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12 {
		float: left
	}
	.col-sm-12 {
		width: 100%
	}
	.col-sm-11 {
		width: 91.66666667%
	}
	.col-sm-10 {
		width: 83.33333333%
	}
	.col-sm-9 {
		width: 75%
	}
	.col-sm-8 {
		width: 66.66666667%
	}
	.col-sm-7 {
		width: 58.33333333%
	}
	.col-sm-6 {
		width: 50%
	}
	.col-sm-5 {
		width: 41.66666667%
	}
	.col-sm-4 {
		width: 33.33333333%
	}
	.col-sm-3 {
		width: 25%
	}
	.col-sm-2 {
		width: 16.66666667%
	}
	.col-sm-1 {
		width: 8.33333333%
	}
	.col-sm-pull-12 {
		right: 100%
	}
	.col-sm-pull-11 {
		right: 91.66666667%
	}
	.col-sm-pull-10 {
		right: 83.33333333%
	}
	.col-sm-pull-9 {
		right: 75%
	}
	.col-sm-pull-8 {
		right: 66.66666667%
	}
	.col-sm-pull-7 {
		right: 58.33333333%
	}
	.col-sm-pull-6 {
		right: 50%
	}
	.col-sm-pull-5 {
		right: 41.66666667%
	}
	.col-sm-pull-4 {
		right: 33.33333333%
	}
	.col-sm-pull-3 {
		right: 25%
	}
	.col-sm-pull-2 {
		right: 16.66666667%
	}
	.col-sm-pull-1 {
		right: 8.33333333%
	}
	.col-sm-pull-0 {
		right: auto
	}
	.col-sm-push-12 {
		left: 100%
	}
	.col-sm-push-11 {
		left: 91.66666667%
	}
	.col-sm-push-10 {
		left: 83.33333333%
	}
	.col-sm-push-9 {
		left: 75%
	}
	.col-sm-push-8 {
		left: 66.66666667%
	}
	.col-sm-push-7 {
		left: 58.33333333%
	}
	.col-sm-push-6 {
		left: 50%
	}
	.col-sm-push-5 {
		left: 41.66666667%
	}
	.col-sm-push-4 {
		left: 33.33333333%
	}
	.col-sm-push-3 {
		left: 25%
	}
	.col-sm-push-2 {
		left: 16.66666667%
	}
	.col-sm-push-1 {
		left: 8.33333333%
	}
	.col-sm-push-0 {
		left: auto
	}
	.col-sm-offset-12 {
		margin-left: 100%
	}
	.col-sm-offset-11 {
		margin-left: 91.66666667%
	}
	.col-sm-offset-10 {
		margin-left: 83.33333333%
	}
	.col-sm-offset-9 {
		margin-left: 75%
	}
	.col-sm-offset-8 {
		margin-left: 66.66666667%
	}
	.col-sm-offset-7 {
		margin-left: 58.33333333%
	}
	.col-sm-offset-6 {
		margin-left: 50%
	}
	.col-sm-offset-5 {
		margin-left: 41.66666667%
	}
	.col-sm-offset-4 {
		margin-left: 33.33333333%
	}
	.col-sm-offset-3 {
		margin-left: 25%
	}
	.col-sm-offset-2 {
		margin-left: 16.66666667%
	}
	.col-sm-offset-1 {
		margin-left: 8.33333333%
	}
	.col-sm-offset-0 {
		margin-left: 0
	}
}

@media ( min-width :992px) {
	.col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6,
		.col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
		float: left
	}
	.col-md-12 {
		width: 100%
	}
	.col-md-11 {
		width: 91.66666667%
	}
	.col-md-10 {
		width: 83.33333333%
	}
	.col-md-9 {
		width: 75%
	}
	.col-md-8 {
		width: 66.66666667%
	}
	.col-md-7 {
		width: 58.33333333%
	}
	.col-md-6 {
		width: 50%
	}
	.col-md-5 {
		width: 41.66666667%
	}
	.col-md-4 {
		width: 33.33333333%
	}
	.col-md-3 {
		width: 25%
	}
	.col-md-2 {
		width: 16.66666667%
	}
	.col-md-1 {
		width: 8.33333333%
	}
	.col-md-pull-12 {
		right: 100%
	}
	.col-md-pull-11 {
		right: 91.66666667%
	}
	.col-md-pull-10 {
		right: 83.33333333%
	}
	.col-md-pull-9 {
		right: 75%
	}
	.col-md-pull-8 {
		right: 66.66666667%
	}
	.col-md-pull-7 {
		right: 58.33333333%
	}
	.col-md-pull-6 {
		right: 50%
	}
	.col-md-pull-5 {
		right: 41.66666667%
	}
	.col-md-pull-4 {
		right: 33.33333333%
	}
	.col-md-pull-3 {
		right: 25%
	}
	.col-md-pull-2 {
		right: 16.66666667%
	}
	.col-md-pull-1 {
		right: 8.33333333%
	}
	.col-md-pull-0 {
		right: auto
	}
	.col-md-push-12 {
		left: 100%
	}
	.col-md-push-11 {
		left: 91.66666667%
	}
	.col-md-push-10 {
		left: 83.33333333%
	}
	.col-md-push-9 {
		left: 75%
	}
	.col-md-push-8 {
		left: 66.66666667%
	}
	.col-md-push-7 {
		left: 58.33333333%
	}
	.col-md-push-6 {
		left: 50%
	}
	.col-md-push-5 {
		left: 41.66666667%
	}
	.col-md-push-4 {
		left: 33.33333333%
	}
	.col-md-push-3 {
		left: 25%
	}
	.col-md-push-2 {
		left: 16.66666667%
	}
	.col-md-push-1 {
		left: 8.33333333%
	}
	.col-md-push-0 {
		left: auto
	}
	.col-md-offset-12 {
		margin-left: 100%
	}
	.col-md-offset-11 {
		margin-left: 91.66666667%
	}
	.col-md-offset-10 {
		margin-left: 83.33333333%
	}
	.col-md-offset-9 {
		margin-left: 75%
	}
	.col-md-offset-8 {
		margin-left: 66.66666667%
	}
	.col-md-offset-7 {
		margin-left: 58.33333333%
	}
	.col-md-offset-6 {
		margin-left: 50%
	}
	.col-md-offset-5 {
		margin-left: 41.66666667%
	}
	.col-md-offset-4 {
		margin-left: 33.33333333%
	}
	.col-md-offset-3 {
		margin-left: 25%
	}
	.col-md-offset-2 {
		margin-left: 16.66666667%
	}
	.col-md-offset-1 {
		margin-left: 8.33333333%
	}
	.col-md-offset-0 {
		margin-left: 0
	}
}

@media ( min-width :1200px) {
	.col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6,
		.col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12 {
		float: left
	}
	.col-lg-12 {
		width: 100%
	}
	.col-lg-11 {
		width: 91.66666667%
	}
	.col-lg-10 {
		width: 83.33333333%
	}
	.col-lg-9 {
		width: 75%
	}
	.col-lg-8 {
		width: 66.66666667%
	}
	.col-lg-7 {
		width: 58.33333333%
	}
	.col-lg-6 {
		width: 50%
	}
	.col-lg-5 {
		width: 41.66666667%
	}
	.col-lg-4 {
		width: 33.33333333%
	}
	.col-lg-3 {
		width: 25%
	}
	.col-lg-2 {
		width: 16.66666667%
	}
	.col-lg-1 {
		width: 8.33333333%
	}
	.col-lg-pull-12 {
		right: 100%
	}
	.col-lg-pull-11 {
		right: 91.66666667%
	}
	.col-lg-pull-10 {
		right: 83.33333333%
	}
	.col-lg-pull-9 {
		right: 75%
	}
	.col-lg-pull-8 {
		right: 66.66666667%
	}
	.col-lg-pull-7 {
		right: 58.33333333%
	}
	.col-lg-pull-6 {
		right: 50%
	}
	.col-lg-pull-5 {
		right: 41.66666667%
	}
	.col-lg-pull-4 {
		right: 33.33333333%
	}
	.col-lg-pull-3 {
		right: 25%
	}
	.col-lg-pull-2 {
		right: 16.66666667%
	}
	.col-lg-pull-1 {
		right: 8.33333333%
	}
	.col-lg-pull-0 {
		right: auto
	}
	.col-lg-push-12 {
		left: 100%
	}
	.col-lg-push-11 {
		left: 91.66666667%
	}
	.col-lg-push-10 {
		left: 83.33333333%
	}
	.col-lg-push-9 {
		left: 75%
	}
	.col-lg-push-8 {
		left: 66.66666667%
	}
	.col-lg-push-7 {
		left: 58.33333333%
	}
	.col-lg-push-6 {
		left: 50%
	}
	.col-lg-push-5 {
		left: 41.66666667%
	}
	.col-lg-push-4 {
		left: 33.33333333%
	}
	.col-lg-push-3 {
		left: 25%
	}
	.col-lg-push-2 {
		left: 16.66666667%
	}
	.col-lg-push-1 {
		left: 8.33333333%
	}
	.col-lg-push-0 {
		left: auto
	}
	.col-lg-offset-12 {
		margin-left: 100%
	}
	.col-lg-offset-11 {
		margin-left: 91.66666667%
	}
	.col-lg-offset-10 {
		margin-left: 83.33333333%
	}
	.col-lg-offset-9 {
		margin-left: 75%
	}
	.col-lg-offset-8 {
		margin-left: 66.66666667%
	}
	.col-lg-offset-7 {
		margin-left: 58.33333333%
	}
	.col-lg-offset-6 {
		margin-left: 50%
	}
	.col-lg-offset-5 {
		margin-left: 41.66666667%
	}
	.col-lg-offset-4 {
		margin-left: 33.33333333%
	}
	.col-lg-offset-3 {
		margin-left: 25%
	}
	.col-lg-offset-2 {
		margin-left: 16.66666667%
	}
	.col-lg-offset-1 {
		margin-left: 8.33333333%
	}
	.col-lg-offset-0 {
		margin-left: 0
	}
}

.clearfix:before, .clearfix:after, .container:before, .container:after,
	.container-fluid:before, .container-fluid:after, .row:before, .row:after
	{
	content: " ";
	display: table
}

.clearfix:after, .container:after, .container-fluid:after, .row:after {
	clear: both
}

.center-block {
	display: block;
	margin-left: auto;
	margin-right: auto
}

.pull-right {
	float: right !important
}

.pull-left {
	float: left !important
}

.hide {
	display: none !important
}

.show {
	display: block !important
}

.invisible {
	visibility: hidden
}

.text-hide {
	font: 0/0 a;
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0
}

.hidden {
	display: none !important
}

a {
	text-decoration: none;
	color: inherit;
}

a:hover, a:focus {
	text-decoration: none;
	color: inherit;
}

header {
	font-family: 'Open Sans', sans-serif;
	background-size: cover;
	height: 100px;
	position: relative;
	color: #ffffff;
}

header .overlay {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-color: rgba(0, 0, 0, .6)
}

.center {
	margin-top: 0vh;
}

header h1 {
	font-weight: bold;
	font-size: 65px;
}

header h1 span {
	font-weight: normal;
	color: #fd8a38
}

header h1 ~ .lead {
	font-size: 30px;
	color: #fd8a38
}



.mini {
	position: relative;
	min-height: 1px;
	padding-left: 15px;
	padding-right: 15px;
	width: 33.33333333%;
	float: left;
}

.last {
	width: 20%;
}

footer {
	background-color: #1d1d1d;
	margin-top: 60px;
}

footer .store-feature {
	margin-bottom: 30px;
	background-color: #363636;
	text-align: center;
	margin-top: -41px;
}

footer .store-feature .row {
	margin-right: 0;
	margin-left: 0;
}

footer .store-feature .feature {
	border-bottom: 1px solid #1d1d1d;
	padding: 20px 15px;
}

@media ( min-width : 768px) {
	footer .store-feature .feature {
		border-right: 1px solid #1d1d1d;
		border-bottom: none;
	}
}

footer .store-feature .feature:last-child {
	border-right: none;
	border-bottom: none;
}

footer .store-feature .feature .tilte {
	color: #D9D9D9;
	font-family: 'Oswald';
	font-weight: 400;
	font-size: 14px;
	letter-spacing: 1.5px;
	margin: 0;
	margin-bottom: 5px;
}

footer .store-feature .feature .description {
	font-size: 14px;
	margin: 0;
	letter-spacing: 0.5px;
	color: #A5A5A5;
	font-weight: 300;
	font-size: 12px;
}

@media ( max-width : 500px) {
	footer .footer-col {
		width: 100% !important;
	}
}

footer .footer-col .col-title {
	margin-left: 15px;
	color: #e3e3e3;
	font-weight: 400;
	margin-bottom: 20px;
	font-family: 'Oswald';
	font-size: 16px;
	letter-spacing: 1.5px;
}

footer .footer-col .footer-list .list-item {
	color: #707070;
	font-size: 14px;
	font-weight: 300;
	margin-bottom: 10px;
}

footer .footer-col .footer-list .list-item::last-child {
	margin-bottom: 0px;
}

footer .footer-col .footer-list .list-item a:hover {
	text-decoration: underline;
}

footer .newsletter-col .description {
	color: #707070;
}

footer .newsletter-col .social-media {
	margin-top: 20px;
}

footer .newsletter-col .social-media .item {
	display: inline-block;
	margin-right: 10px;
	font-size: 18px;
}

footer .newsletter-col .social-media .item a {
	width: 50px;
	height: 50px;
	display: inline-block;
	border: 2px solid #363636;
	border-radius: 50%;
	color: #ffffff;
	text-align: center;
	line-height: 50px;
	transition: .3s;
}

footer .newsletter-col .social-media .item a:hover {
	border-color: #ffffff;
	background-color: #ffffff;
	color: #333;
}

footer .copyright-row {
	border-top: 1px solid #333336;
	padding: 40px 0;
	margin-top: 30px;
}

footer .copyright-row .paragraph {
	display: inline-block;
	color: #707070;
	margin: 0;
}

footer .copyright-row .supported-payment {
	float: right;
}

footer .copyright-row .supported-payment img {
	display: inline-block;
	max-width: 100%;
}

@media ( max-width : 700px) {
	.col-xs-12 {
		width: 100%;
	}
	footer .copyright-row {
		padding: 20px 0;
	}
	footer .copyright-row .paragraph {
		display: block;
		margin-bottom: 15px;
		text-align: center;
	}
	footer .copyright-row .supported-payment {
		float: none;
		text-align: center;
	}
}

/* navbar */
.navbar-default {
	background-color: #F8F8F8;
	border-color: #E7E7E7;
}
/* Title */
.navbar-default .navbar-brand {
	color: #777;
}

.navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus
	{
	color: #5E5E5E;
}
/* Link */
.navbar-default .navbar-nav>li>a {
	color: #777;
}

.navbar-default .navbar-nav>li>a:hover, .navbar-default .navbar-nav>li>a:focus
	{
	color: #333;
}

.navbar-default .navbar-nav>.active>a, .navbar-default .navbar-nav>.active>a:hover,
	.navbar-default .navbar-nav>.active>a:focus {
	color: #555;
	background-color: #E7E7E7;
}

.navbar-default .navbar-nav>.open>a, .navbar-default .navbar-nav>.open>a:hover,
	.navbar-default .navbar-nav>.open>a:focus {
	color: #555;
	background-color: #D5D5D5;
}
/* Caret */
.navbar-default .navbar-nav>.dropdown>a .caret {
	border-top-color: #777;
	border-bottom-color: #777;
}

.navbar-default .navbar-nav>.dropdown>a:hover .caret, .navbar-default .navbar-nav>.dropdown>a:focus .caret
	{
	border-top-color: #333;
	border-bottom-color: #333;
}

.navbar-default .navbar-nav>.open>a .caret, .navbar-default .navbar-nav>.open>a:hover .caret,
	.navbar-default .navbar-nav>.open>a:focus .caret {
	border-top-color: #555;
	border-bottom-color: #555;
}
/* Mobile version */
.navbar-default .navbar-toggle {
	border-color: #DDD;
}

.navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus
	{
	background-color: #DDD;
}

.navbar-default .navbar-toggle .icon-bar {
	background-color: #CCC;
}

@media ( max-width : 767px) {
	.navbar-default .navbar-nav .open .dropdown-menu>li>a {
		color: #777;
	}
	.navbar-default .navbar-nav .open .dropdown-menu>li>a:hover,
		.navbar-default .navbar-nav .open .dropdown-menu>li>a:focus {
		color: #333;
	}
}
</style>


	</h:head>




	<h:body>

		<p:layout fullPage="true">

			<p:layoutUnit position="north" size="100" style="height:500px"
				resizable="true" closable="true" collapsible="true">

				<!-- header  -->
				<header>
				<div class="overlay">
					<div class="container">

						<div class="row center" style="text-align:center">
							<div class="col-md-12">
								<h1 class="upperCase text-center-xs" style="margin-top: 15px">
									SECURITY<span> IS</span>
								</h1>
								
							</div>
						</div>
					</div>
				</div>

				</header>
			</p:layoutUnit>

			<p:layoutUnit position="south" size="100" closable="true"
				collapsible="true"   styleClass="ui-layout-unit-content ui-widget-content" style="position: relative;/* height: 86px; */visibility: visible;">
				<!--                    Footer -->

				<footer>
				<div class="store-feature">
					<div class="row">
						<div class="mini feature">
							<h4 class="tilte">All Encryption Method</h4>
							<div class="description">Encrypt and Decrypt With All
								Method</div>
						</div>

						<div class="mini feature">
							<h4 class="tilte">All Lecture and Section</h4>
							<div class="description">Download All Lectures and Sections</div>
						</div>


						<div class="  feature">
							<h4 class="tilte">Final Exam and Mid-Term</h4>
							<div class="description">Find The Exams with the solutions</div>
						</div>

					</div>
				</div>
				</footer>
				<!-- 				******************* notification button *********** -->

				<p:notificationBar position="top" effect="slide" styleClass="top"
					widgetVar="bar" style="width:100%">
					<!-- 					<h:outputText value="PrimeFaces Rocks!" style="font-size:36px;" /> -->

					<!--  contact us  -->
					<h:form id="fform">
						<p:carousel value="#{carouselView.persons}" headerText="Students "
							var="person" itemStyle="text-align:center" responsive="true"
							style="width:100%">
							<p:panelGrid columns="2" style="width:100%;margin:10px 0px"
								columnClasses="label,value" layout="grid"
								styleClass="ui-panelgrid-blank">
								<f:facet name="header">

									<p:graphicImage width="150px" height="100px"
										library="images/person" name="#{person.imageName}.jpg"></p:graphicImage>
								</f:facet>

								<h:outputText value="Id:" />
								<h:outputText value="#{person.id}" />

								<h:outputText value="Name:" />
								<h:outputText value="#{person.name}" />

								<h:outputText value="Year:" />
								<h:outputText value="#{person.year}" />

								<h:outputText value="Section:" />
								<h:outputText value="#{person.section}" />
							</p:panelGrid>


						</p:carousel>

					</h:form>

					<p:commandButton value="Hide" onclick="PF('bar').hide()"
						type="button" icon="ui-icon-arrow-1-n" />

				</p:notificationBar>


				<p:commandButton style="position:fixed; top:30px; left:10px"
					value="About Us" onclick="PF('bar').show()" type="button"
					icon="ui-icon-arrow-1-s" />


			</p:layoutUnit>

			<p:layoutUnit position="west" size="175" header="Left"
				collapsible="true">
				<h:form>

					<p:growl id="messages" showDetail="false" />
					<p:menu>
						<p:submenu label="Sources">
							<p:menuitem id="section" value="Section"
								onclick="PF('sec').show();" icon="fa-file-image-o" />
							<p:menuitem value="Lectures" icon="fa-file-image-o"
								url="https://drive.google.com/drive/folders/0B6ns0aq69inlaXFPWkRVY3pMU0k" />
							<p:menuitem value="Exams" icon="fa-file-image-o"
								onclick="PF('exam').show();" />
							<p:menuitem value="Asci" icon="fa-table"
								onclick="PF('aski').show();" />

						</p:submenu>

					</p:menu>

				</h:form>
			</p:layoutUnit>

			<p:layoutUnit position="center">
				<!--  ********************************* -->
				<h:form>

					<p:growl id="msgs" showDetail="true" />

					<p:fieldset legend="Classsical Methods .." toggleable="true"
						toggleSpeed="500" style="margin-bottom:20px">
						<h:panelGrid columns="2" cellpadding="5">
							<h:outputText
								value="is the degree of resistance to, or protection from, harm. It applies to any vulnerable or valuable asset, such as a person, dwelling, community, item, nation, or organization." />
						</h:panelGrid>
						<!-- 						dashboard  -->
						<p:dashboard id="board" model="#{dashboardView.model}">
							<p:ajax event="reorder" listener="#{dashboardView.handleReorder}"
								update="msgs" />
							<!-- ceaser  -->
							<p:panel id="ceaser" header="Ceaser" closable="true"
								toggleable="true">
								<p:commandButton value="enc" type="button"
									onclick="PF('ceaser_enc').show();" />
								<p:commandButton value="dec" type="button"
									onclick="PF('ceaser_dec').show();" />
							</p:panel>

							<!-- transposition -->
							<p:panel id="transposition" header="Transposition"
								toggleable="true" closable="true">

								<p:commandButton value="enc" type="button"
									onclick="PF('transposition_enc').show();" />
								<p:commandButton value="dec" type="button"
									onclick="PF('transposition_dec').show();" />

							</p:panel>
							<!-- poly -->
							<p:panel id="ploy" header="Ployalphapitic substitution"
								toggleable="true" closable="true">
								<p:commandButton value="enc" type="button"
									onclick="PF('poly_enc').show();" />
								<p:commandButton value="dec" type="button"
									onclick="PF('poly_dec').show();" />


							</p:panel>
							<!--  play  -->
							<p:panel id="play" header="Play Fair" toggleable="true"
								closable="true">


								<p:commandButton value="enc" type="button"
									onclick="PF('play_enc').show();" />
								<p:commandButton value="dec" type="button"
									onclick="PF('play_dec').show();" />

							</p:panel>
							<!-- affine -->
							<p:panel id="affine" header="Affine" toggleable="true"
								closable="true">

								<p:commandButton value="enc" type="button"
									onclick="PF('affine_enc').show();" />
								<p:commandButton value="dec" type="button"
									onclick="PF('affine_dec').show();" />

							</p:panel>

							<!--  combination  -->
							<p:panel id="combination"
								header="Combination of substitution and transposition"
								toggleable="true" closable="true">


								<p:commandButton value="enc" type="button"
									onclick="PF('combination_enc').show();" />
								<p:commandButton value="dec" type="button"
									onclick="PF('combination_dec').show();" />

							</p:panel>

							<!--  Hillcypher  -->
							<p:panel id="hillcypher" header="Hillcypher" toggleable="true"
								closable="true">


								<p:commandButton value="enc" type="button"
									onclick="PF('hillcypher_enc').show();" />
								<p:commandButton value="dec" type="button"
									onclick="PF('hillcypher_dec').show();" />

							</p:panel>


							<!-- diffhelman -->
							<p:panel id="diffhelman" header="Diffhelman" toggleable="true"
								closable="true">
								<p:commandButton value="find Key" type="button"
									onclick="PF('diffhelman_key').show();" />


							</p:panel>
						</p:dashboard>

						<div style="clear: both" />

					</p:fieldset>
					<p:fieldset legend="Modern Methods .." toggleable="true"
						toggleSpeed="500">
						<h:panelGrid columns="2" cellpadding="5">
							<h:outputText
								value="is the degree of resistance to, or protection from, harm. It applies to any vulnerable or valuable asset, such as a person, dwelling, community, item, nation, or organization." />
						</h:panelGrid>
						<!-- 						dashboard  -->
						<p:dashboard id="board1" model="#{dashboardView.model}">

							<!-- Rsa  -->
							<p:panel id="rsa" header="Rsa" closable="true" toggleable="true">
								<p:commandButton value="enc" type="button"
									onclick="PF('rsa_enc').show();" />
								<p:commandButton value="dec" type="button"
									onclick="PF('rsa_dec').show();" />
							</p:panel>
							<!-- Des  -->
							<p:panel id="des" header="Des" closable="true" toggleable="true">
								<p:commandButton value="enc" type="button"
									onclick="PF('des_enc').show();" />
								<p:commandButton value="dec" type="button"
									onclick="PF('des_dec').show();" />
							</p:panel>

						</p:dashboard>

						<div style="clear: both" />

					</p:fieldset>

				</h:form>
				<!-- ************************************** -->

			</p:layoutUnit>

		</p:layout>
		<!-- 		********************** ceaser *************** -->
		<!-- 		enc -->
		<p:dialog header="ceaser encrypt" widgetVar="ceaser_enc"
			showEffect="explode" hideEffect="bounce" height="300px" width="550px"
			modal="true" closable="true">
			<h:form>
				<p:growl id="cgrow" showDetail="true" />
				<p:panel id="cpanel" header="Test Ceaser">

					<p:messages id="cmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<p:outputLabel for="ckey" value="Key:" />
						<p:inputText id="ckey" value="#{ceaserBean.key}" required="true"
							requiredMessage="Key is Required" label="ckey">
							<p:ajax update="ckeymessage" event="keyup" />

						</p:inputText>
						<p:message for="ckey" id="ckeymessage" display="icon" />

						<p:outputLabel for="cplain" value="plain:" />
						<p:inputText id="cplain" value="#{ceaserBean.plain}"
							label="cplain" required="true"
							requiredMessage="Plain is Required"
							validatorMessage="Plain is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="cplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="cplain" id="cplainmessage" display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="cpanel cgrow"
						actionListener="#{ceaserBean.test()}" icon="ui-icon-check" />
				</p:panel>
			</h:form>


		</p:dialog>
		<!-- 		dec -->
		<p:dialog header="Ceaser Decrypt" widgetVar="ceaser_dec"
			showEffect="explode" hideEffect="bounce" modal="true" closable="true"
			height="300px" width="550px">

			<h:form>
				<p:growl id="cdecgrow" showDetail="true" />
				<p:panel id="cdecpanel" header="Test Ceaser">

					<p:messages id="cdecmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<p:outputLabel for="cdeckey" value="Key:" />
						<p:inputText id="cdeckey" value="#{ceaserBean.key}"
							required="true" requiredMessage="Key is Required" label="cdeckey">
							<p:ajax update="cdeckeymessage" event="keyup" />

						</p:inputText>
						<p:message for="cdeckey" id="cdeckeymessage" display="icon" />

						<p:outputLabel for="cdecplain" value="Cypher:" />
						<p:inputText id="cdecplain" value="#{ceaserBean.cypher}"
							label="cdecplain" required="true"
							requiredMessage="Cypher is Required"
							validatorMessage="Cypher is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="cdecplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="cdecplain" id="cdecplainmessage" display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="cdecpanel cdecgrow"
						actionListener="#{ceaserBean.test_dec()}" icon="ui-icon-check" />
				</p:panel>
			</h:form>


		</p:dialog>

		<!-- 		 ***********************transposition ************************ -->
		<!-- 		enc -->
		<p:dialog header="Effects" widgetVar="transposition_enc"
			showEffect="explode" hideEffect="bounce" height="300px" width="550px"
			modal="true" closable="true">


			<h:form>
				<p:growl id="tencgrow" showDetail="true" />
				<p:panel id="tencpanel" header="Test Transposition">

					<p:messages id="tencmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<p:outputLabel for="tenckey" value="Key:" />
						<p:inputText id="tenckey" value="#{transpositionBean.key}"
							required="true" requiredMessage="Key is Required" label="tenckey"
							validatorMessage="Key is String Only">

							<f:validateRegex pattern="^[a-zA-Z ]+$" />

							<p:ajax update="tenckeymessage" event="keyup" />
						</p:inputText>
						<p:message for="tenckey" id="tenckeymessage" display="icon" />

						<p:outputLabel for="tencplain" value="Plain:" />
						<p:inputText id="tencplain" value="#{transpositionBean.plain}"
							label="tencplain" required="true"
							requiredMessage="Plain is Required"
							validatorMessage="Plain is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="tencplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="tencplain" id="tencplainmessage" display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="tencpanel tencgrow"
						actionListener="#{transpositionBean.test()}" icon="ui-icon-check"
						validateClient="true"></p:commandButton>
				</p:panel>
			</h:form>






		</p:dialog>
		<!-- 		dec -->
		<p:dialog header="Effects" widgetVar="transposition_dec"
			showEffect="explode" hideEffect="bounce" height="300px" width="550px"
			modal="true" closable="true">



			<h:form>
				<p:growl id="tdecgrow" showDetail="true" />
				<p:panel id="tdecpanel" header="Test Transposition">

					<p:messages id="tdecmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<p:outputLabel for="tdeckey" value="Key:" />
						<p:inputText id="tdeckey" value="#{transpositionBean.key}"
							required="true" requiredMessage="Key is Required" label="tenckey"
							validatorMessage="Key is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="tdeckeymessage" event="keyup" />

						</p:inputText>
						<p:message for="tdeckey" id="tdeckeymessage" display="icon" />

						<p:outputLabel for="tdecplain" value="Cypher:" />
						<p:inputText id="tdecplain" value="#{transpositionBean.cypher}"
							label="tdecplain" required="true"
							requiredMessage="Cypher is Required"
							validatorMessage="Cypher is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="tdecplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="tdecplain" id="tdecplainmessage" display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="tdecpanel tdecgrow"
						actionListener="#{transpositionBean.test_dec()}"
						icon="ui-icon-check" />
				</p:panel>
			</h:form>





		</p:dialog>
		<!-- 		******************* ploy************* -->
		<!-- 		enc -->
		<p:dialog header="Effects" widgetVar="poly_enc" showEffect="explode"
			hideEffect="bounce" height="300px" width="550px" modal="true"
			closable="true">

			<h:form>
				<p:growl id="poencgrow" showDetail="true" />
				<p:panel id="poencpanel" header="Test Polyalphapitic substitution">

					<p:messages id="poencmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<p:outputLabel for="poenckey" value="Key:" />
						<p:inputText id="poenckey" value="#{polyBean.key}" required="true"
							requiredMessage="Key is Required" label="poenckey"
							validatorMessage="Key is String Only">

							<f:validateRegex pattern="^[a-zA-Z ]+$" />

							<p:ajax update="poenckeymessage" event="keyup" />
						</p:inputText>
						<p:message for="poenckey" id="poenckeymessage" display="icon" />

						<p:outputLabel for="poencplain" value="Plain:" />
						<p:inputText id="poencplain" value="#{polyBean.plain}"
							label="poencplain" required="true"
							requiredMessage="Plain is Required"
							validatorMessage="Plain is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="poencplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="poencplain" id="poencplainmessage" display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="poencpanel poencgrow"
						actionListener="#{polyBean.test()}" icon="ui-icon-check"
						validateClient="true"></p:commandButton>
				</p:panel>
			</h:form>




		</p:dialog>
		<!-- 		dec -->
		<p:dialog header="Effects" widgetVar="poly_dec" showEffect="explode"
			hideEffect="bounce" height="300px" width="550px" modal="true"
			closable="true">





			<h:form>
				<p:growl id="podecgrow" showDetail="true" />
				<p:panel id="podecpanel" header="Test Polyalphapitic substitution">

					<p:messages id="podecmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<p:outputLabel for="podeckey" value="Key:" />
						<p:inputText id="podeckey" value="#{polyBean.key}" required="true"
							requiredMessage="Key is Required" label="poenckey"
							validatorMessage="Key is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="podeckeymessage" event="keyup" />

						</p:inputText>
						<p:message for="podeckey" id="podeckeymessage" display="icon" />

						<p:outputLabel for="podecplain" value="Cypher:" />
						<p:inputText id="podecplain" value="#{polyBean.cypher}"
							label="podecplain" required="true"
							requiredMessage="Cypher is Required"
							validatorMessage="Cypher is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="podecplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="podecplain" id="podecplainmessage" display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="podecpanel podecgrow"
						actionListener="#{polyBean.test_dec()}" icon="ui-icon-check" />
				</p:panel>
			</h:form>






		</p:dialog>
		<!--  *************************** play ******************** -->
		<!-- 		enc -->
		<p:dialog header="Effects" widgetVar="play_enc" showEffect="explode"
			hideEffect="bounce" height="300px" width="550px" modal="true"
			closable="true">

			<h:form>
				<p:growl id="plencgrow" showDetail="true" />
				<p:panel id="plencpanel" header="Test PlayFair">

					<p:messages id="plencmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<p:outputLabel for="plenckey" value="Key:" />
						<p:inputText id="plenckey" value="#{playFairBean.key}"
							required="true" requiredMessage="Key is Required"
							label="plenckey" validatorMessage="Key is String Only">

							<f:validateRegex pattern="^[a-zA-Z ]+$" />

							<p:ajax update="plenckeymessage" event="keyup" />
						</p:inputText>
						<p:message for="plenckey" id="plenckeymessage" display="icon" />

						<p:outputLabel for="plencplain" value="Plain:" />
						<p:inputText id="plencplain" value="#{playFairBean.plain}"
							label="plencplain" required="true"
							requiredMessage="Plain is Required"
							validatorMessage="Plain is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="plencplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="plencplain" id="plencplainmessage" display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="plencpanel plencgrow"
						actionListener="#{playFairBean.test()}" icon="ui-icon-check"
						validateClient="true"></p:commandButton>
				</p:panel>
			</h:form>




		</p:dialog>
		<!-- 		dec -->
		<p:dialog header="Effects" widgetVar="play_dec" showEffect="explode"
			hideEffect="bounce" height="300px" width="550px" modal="true"
			closable="true">


			<h:form>
				<p:growl id="pldecgrow" showDetail="true" />
				<p:panel id="pldecpanel" header="Test PlayFair">

					<p:messages id="pldecmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<p:outputLabel for="pldeckey" value="Key:" />
						<p:inputText id="pldeckey" value="#{playFairBean.key}"
							required="true" requiredMessage="Key is Required"
							label="plenckey" validatorMessage="Key is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="pldeckeymessage" event="keyup" />

						</p:inputText>
						<p:message for="pldeckey" id="pldeckeymessage" display="icon" />

						<p:outputLabel for="pldecplain" value="Cypher:" />
						<p:inputText id="pldecplain" value="#{playFairBean.cypher}"
							label="pldecplain" required="true"
							requiredMessage="Cypher is Required"
							validatorMessage="Cypher is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="pldecplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="pldecplain" id="pldecplainmessage" display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="pldecpanel pldecgrow"
						actionListener="#{playFairBean.test_dec()}" icon="ui-icon-check" />
				</p:panel>
			</h:form>



		</p:dialog>
		<!--  *************************** affine ******************** -->
		<!-- 		enc -->
		<p:dialog header="Effects" widgetVar="affine_enc" showEffect="explode"
			hideEffect="bounce" height="300px" width="550px" modal="true"
			closable="true">



			<h:form>
				<p:growl id="afencgrow" showDetail="true" />
				<p:panel id="afencpanel" header="Test Affine">

					<p:messages id="afencmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<p:outputLabel for="afenckey" value="Key:" />
						<p:inputText id="afenckey" value="#{affineBean.k}" required="true"
							requiredMessage="Key is Required" label="afenckey">



							<p:ajax update="afenckeymessage" event="keyup" />
						</p:inputText>
						<p:message for="afenckey" id="afenckeymessage" display="icon" />


						<p:outputLabel for="afencm" value="M:" />
						<p:inputText id="afencm" value="#{affineBean.m}" required="true"
							requiredMessage="M is Required" label="afencm">



							<p:ajax update="afencmmessage" event="keyup" />
						</p:inputText>
						<p:message for="afencm" id="afencmmessage" display="icon" />



						<p:outputLabel for="afencn" value="N:" />
						<p:inputText id="afencn" value="#{affineBean.n}" required="true"
							requiredMessage="N is Required" label="afencn">



							<p:ajax update="afencnmessage" event="keyup" />
						</p:inputText>
						<p:message for="afencn" id="afencnmessage" display="icon" />



						<p:outputLabel for="afencplain" value="Plain:" />
						<p:inputText id="afencplain" value="#{affineBean.plain}"
							label="afencplain" required="true"
							requiredMessage="Plain is Required"
							validatorMessage="Plain is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="afencplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="afencplain" id="afencplainmessage" display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="afencpanel afencgrow"
						actionListener="#{affineBean.test()}" icon="ui-icon-check"
						validateClient="true"></p:commandButton>
				</p:panel>
			</h:form>





		</p:dialog>
		<!-- 		dec -->
		<p:dialog header="Effects" widgetVar="affine_dec" showEffect="explode"
			hideEffect="bounce" height="300px" width="550px" modal="true"
			closable="true">

			<h:form>
				<p:growl id="afdecgrow" showDetail="true" />
				<p:panel id="afdecpanel" header="Test Affine">

					<p:messages id="afdecmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<p:outputLabel for="afdeckey" value="Key:" />
						<p:inputText id="afdeckey" value="#{affineBean.k}" required="true"
							requiredMessage="Key is Required" label="afenckey">

							<p:ajax update="afdeckeymessage" event="keyup" />

						</p:inputText>
						<p:message for="afdeckey" id="afdeckeymessage" display="icon" />



						<p:outputLabel for="afdecm" value="M:" />
						<p:inputText id="afdecm" value="#{affineBean.m}" required="true"
							requiredMessage="M is Required" label="afdecm">



							<p:ajax update="afdecmmessage" event="keyup" />
						</p:inputText>
						<p:message for="afdecm" id="afdecmmessage" display="icon" />



						<p:outputLabel for="afdecn" value="N:" />
						<p:inputText id="afdecn" value="#{affineBean.n}" required="true"
							requiredMessage="N is Required" label="afdecn">



							<p:ajax update="afdecnmessage" event="keyup" />
						</p:inputText>
						<p:message for="afdecn" id="afdecnmessage" display="icon" />





						<p:outputLabel for="afdecplain" value="Cypher:" />
						<p:inputText id="afdecplain" value="#{affineBean.cypher}"
							label="afdecplain" required="true"
							requiredMessage="Cypher is Required"
							validatorMessage="Cypher is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="afdecplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="afdecplain" id="afdecplainmessage" display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="afdecpanel afdecgrow"
						actionListener="#{affineBean.test_dec()}" icon="ui-icon-check" />
				</p:panel>
			</h:form>




		</p:dialog>
		<!-- ************************combination ************* -->
		<!-- 		enc -->
		<p:dialog header="Effects" widgetVar="combination_enc"
			showEffect="explode" hideEffect="bounce" height="300px" width="550px"
			modal="true" closable="true">


			<h:form>
				<p:growl id="comencgrow" showDetail="true" />
				<p:panel id="comencpanel" header="Test combination">

					<p:messages id="comencmsgs" />

					<h:panelGrid columns="3" cellpadding="5">

						<p:outputLabel for="comencplain" value="Plain:" />
						<p:inputText id="comencplain" value="#{combinationBean.plain}"
							label="comencplain" required="true"
							requiredMessage="Plain is Required"
							validatorMessage="Plain is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="comencplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="comencplain" id="comencplainmessage"
							display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="comencpanel comencgrow"
						actionListener="#{combinationBean.test()}" icon="ui-icon-check"
						validateClient="true"></p:commandButton>
				</p:panel>
			</h:form>



		</p:dialog>
		<!-- 		dec -->
		<p:dialog header="Effects" widgetVar="combination_dec"
			showEffect="explode" hideEffect="bounce" height="300px" width="550px"
			modal="true" closable="true">
			<h:form>
				<p:growl id="comdecgrow" showDetail="true" />
				<p:panel id="comdecpanel" header="Test combination">

					<p:messages id="comdecmsgs" />

					<h:panelGrid columns="3" cellpadding="5">

						<p:outputLabel for="comdecplain" value="Plain:" />
						<p:inputText id="comdecplain" value="#{combinationBean.cypher}"
							label="comdecplain" required="true"
							requiredMessage="Plain is Required"
							validatorMessage="Plain is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="comdecplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="comdecplain" id="comdecplainmessage"
							display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="comdecpanel comdecgrow"
						actionListener="#{combinationBean.test_dec()}"
						icon="ui-icon-check" validateClient="true"></p:commandButton>
				</p:panel>
			</h:form>
		</p:dialog>

		<!-- ************************hillcypher ************* -->
		<!-- 		enc -->
		<p:dialog header="Effects" widgetVar="hillcypher_enc"
			showEffect="explode" hideEffect="bounce" height="400px" width="550px"
			modal="true" closable="true">
			<h:form>
				<p:growl id="hillencgrow" showDetail="true" />
				<p:panel id="hillencpanel" header="Test HillCypher 2">

					<p:messages id="hillencmsgs" />

					<h:outputText value="Key Matrix" />


					<p:panelGrid columns="2" layout="grid">

						<!-- index1 -->
						<p:inputText id="hillindex00" value="#{hillcypher.index00}"
							label="hillindex00" required="true"
							requiredMessage="Index00 is Required">

						</p:inputText>
						<!-- index2 -->
						<p:inputText id="hillindex01" value="#{hillcypher.index01}"
							label="hillindex01" required="true"
							requiredMessage="Index01 is Required">
						</p:inputText>

						<!-- index1 -->
						<p:inputText id="hillindex10" value="#{hillcypher.index10}"
							label="hillindex10" required="true"
							requiredMessage="Index10 is Required">
						</p:inputText>
						<!-- index2 -->
						<p:inputText id="hillindex11" value="#{hillcypher.index11}"
							label="hillindex11" required="true"
							requiredMessage="Index11 is Required">
						</p:inputText>
					</p:panelGrid>
					<!-- 					plain -->
					<h:panelGrid columns="3" cellpadding="5">

						<p:outputLabel for="hillencplain" value="Plain:" />
						<p:inputText id="hillencplain" value="#{hillcypher.plain}"
							label="hillencplain" required="true"
							requiredMessage="Plain is Required"
							validatorMessage="Plain is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="hillencplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="hillencplain" id="hillencplainmessage"
							display="icon" />

					</h:panelGrid>
					<p:commandButton value="Test" update="hillencpanel hillencgrow"
						actionListener="#{hillcypher.test()}" icon="ui-icon-check"
						validateClient="true"></p:commandButton>

				</p:panel>
			</h:form>

		</p:dialog>
		<!-- 		dec -->
		<p:dialog header="Effects" widgetVar="hillcypher_dec"
			showEffect="explode" hideEffect="bounce" height="400px" width="550px"
			modal="true" closable="true">


			<h:form>
				<p:growl id="hilldecgrow" showDetail="true" />
				<p:panel id="hilldecpanel" header="Test HillCypher 2">

					<p:messages id="hilldecmsgs" />

					<h:outputText value="Key Matrix" />


					<p:panelGrid columns="2" layout="grid">

						<!-- index1 -->
						<p:inputText id="hillindex00" value="#{hillcypher.index00}"
							label="hillindex00" required="true"
							requiredMessage="Index00 is Required">

						</p:inputText>
						<!-- index2 -->
						<p:inputText id="hillindex01" value="#{hillcypher.index01}"
							label="hillindex01" required="true"
							requiredMessage="Index01 is Required">
						</p:inputText>

						<!-- index1 -->
						<p:inputText id="hillindex10" value="#{hillcypher.index10}"
							label="hillindex10" required="true"
							requiredMessage="Index10 is Required">
						</p:inputText>
						<!-- index2 -->
						<p:inputText id="hillindex11" value="#{hillcypher.index11}"
							label="hillindex11" required="true"
							requiredMessage="Index11 is Required">
						</p:inputText>
					</p:panelGrid>
					<!-- 					Cypher -->
					<h:panelGrid columns="3" cellpadding="5">

						<p:outputLabel for="hilldeccypher" value="Cypher :" />
						<p:inputText id="hilldeccypher" value="#{hillcypher.cypher}"
							label="hilldeccypher" required="true"
							requiredMessage="Cypher is Required"
							validatorMessage="Cypher is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="hilldeccyphermessage" event="keyup" />
						</p:inputText>
						<p:message for="hilldeccypher" id="hilldeccyphermessage"
							display="icon" />

					</h:panelGrid>
					<p:commandButton value="Test" update="hilldecpanel hilldecgrow"
						actionListener="#{hillcypher.test_dec()}" icon="ui-icon-check"
						validateClient="true"></p:commandButton>

				</p:panel>
			</h:form>



		</p:dialog>



		<!-- *********************** diffhelman ************* -->
		<!-- 		Find Key -->
		<p:dialog header="Effects" widgetVar="diffhelman_key"
			showEffect="explode" hideEffect="bounce" height="400px" width="550px"
			modal="true" closable="true">


			<h:form>
				<p:growl id="diffgrow" showDetail="true" />
				<p:panel id="diffpanel" header="DiffHelman">

					<p:messages id="diffmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<!-- q -->
						<p:outputLabel for="diffq" value="Q :" />
						<p:inputText id="diffq" value="#{diffhelman.q}" required="true"
							requiredMessage="Q is Required" label="diffkey">

							<p:ajax update="diffqmessage" event="keyup" />

						</p:inputText>
						<p:message for="diffq" id="diffqmessage" display="icon" />
						<!-- alpha -->
						<p:outputLabel for="diffalpha" value="alpha :" />
						<p:inputText id="diffalpha" value="#{diffhelman.alpha}"
							label="diffalpha" required="true"
							requiredMessage="alpha is Required">
							<p:ajax update="diffalphamessage" event="keyup" />
						</p:inputText>
						<p:message for="diffalpha" id="diffalphamessage" display="icon" />
						<!-- xa -->

						<p:outputLabel for="diffxa" value="xa :" />
						<p:inputText id="diffxa" value="#{diffhelman.xa}" label="diffxa"
							required="true" requiredMessage="xa is Required">
							<p:ajax update="diffxamessage" event="keyup" />
						</p:inputText>
						<p:message for="diffxa" id="diffxamessage" display="icon" />
						<!-- xb -->
						<p:outputLabel for="diffxb" value="xb :" />
						<p:inputText id="diffxb" value="#{diffhelman.xb}" label="diffxa"
							required="true" requiredMessage="xb is Required">
							<p:ajax update="diffxbmessage" event="keyup" />
						</p:inputText>
						<p:message for="diffxb" id="diffxbmessage" display="icon" />

					</h:panelGrid>
					<!-- button -->
					<p:commandButton value="Test" update="diffpanel diffgrow"
						actionListener="#{diffhelman.test()}" icon="ui-icon-check" />
				</p:panel>
			</h:form>





		</p:dialog>


		<!-- ********************** Modern Method ********************** -->
		<!-- ************************ Rsa ************* -->
		<!-- 		enc -->
		<p:dialog header="Effects" widgetVar="rsa_enc" showEffect="explode"
			hideEffect="bounce" height="350px" width="550px" modal="true"
			closable="true">



			<h:form>
				<p:growl id="rsaencgrow" showDetail="true" />
				<p:panel id="rsaencpanel" header="Test Rsa">

					<p:messages id="rsaencmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<!-- 					p -->
						<p:outputLabel for="rsaencp" value="p:" />
						<p:inputText id="rsaencp" value="#{rsaBean.p}" required="true"
							requiredMessage="P is Required" label="rsaencp">


							<p:ajax update="rsaencpmessage" event="keyup" />
						</p:inputText>
						<p:message for="rsaencp" id="rsaencpmessage" display="icon" />
						<!-- q -->
						<p:outputLabel for="rsaencq" value="q:" />
						<p:inputText id="rsaencq" value="#{rsaBean.q}" required="true"
							requiredMessage="q is Required" label="rsaencq">


							<p:ajax update="rsaencqmessage" event="keyup" />
						</p:inputText>
						<p:message for="rsaencq" id="rsaencqmessage" display="icon" />



						<!-- plain -->
						<p:outputLabel for="rsaencplain" value="Plain:" />
						<p:inputText id="rsaencplain" value="#{rsaBean.plain}"
							label="rsaencplain" required="true"
							requiredMessage="Plain is Required"
							validatorMessage="Plain is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="rsaencplainmessage" event="keyup" />
						</p:inputText>
						<p:message for="rsaencplain" id="rsaencplainmessage"
							display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="rsaencpanel rsaencgrow"
						actionListener="#{rsaBean.test()}" icon="ui-icon-check"
						validateClient="true"></p:commandButton>
				</p:panel>
			</h:form>





		</p:dialog>
		<!-- 		dec -->
		<p:dialog header="Effects" widgetVar="rsa_dec" showEffect="explode"
			hideEffect="bounce" height="350px" width="550px" modal="true"
			closable="true">





			<h:form>
				<p:growl id="rsadecgrow" showDetail="true" />
				<p:panel id="rsadecpanel" header="Test Rsa">

					<p:messages id="rsadecmsgs" />

					<h:panelGrid columns="3" cellpadding="5">
						<!-- 					p -->
						<p:outputLabel for="rsadecp" value="p:" />
						<p:inputText id="rsadecp" value="#{rsaBean.p}" required="true"
							requiredMessage="P is Required" label="rsadecp">


							<p:ajax update="rsadecpmessage" event="keyup" />
						</p:inputText>
						<p:message for="rsadecp" id="rsadecpmessage" display="icon" />
						<!-- q -->
						<p:outputLabel for="rsadecq" value="q:" />
						<p:inputText id="rsadecq" value="#{rsaBean.q}" required="true"
							requiredMessage="q is Required" label="rsadecq">


							<p:ajax update="rsadecqmessage" event="keyup" />
						</p:inputText>
						<p:message for="rsadecq" id="rsadecqmessage" display="icon" />



						<!-- Cypher -->
						<p:outputLabel for="rsadeccypher" value="Cypher:" />
						<p:inputText id="rsadeccypher" value="#{rsaBean.cypher}"
							label="rsadeccypher" required="true"
							requiredMessage="Cypher is Required"
							validatorMessage="Cypher is String Only">
							<f:validateRegex pattern="^[a-zA-Z ]+$" />
							<p:ajax update="rsadeccyphermessage" event="keyup" />
						</p:inputText>
						<p:message for="rsadeccypher" id="rsadeccyphermessage"
							display="icon" />

					</h:panelGrid>

					<p:commandButton value="Test" update="rsadecpanel rsadecgrow"
						actionListener="#{rsaBean.test_dec()}" icon="ui-icon-check"
						validateClient="true"></p:commandButton>
				</p:panel>
			</h:form>








		</p:dialog>
		<!-- ************************ Des ************* -->
		<!-- 		enc -->
		<p:dialog header="Effects" widgetVar="des_enc" showEffect="explode"
			hideEffect="bounce" height="300px" width="550px" modal="true"
			closable="true">
			<h:outputText value="des_enc" />
		</p:dialog>
		<!-- 		dec -->
		<p:dialog header="Effects" widgetVar="des_dec" showEffect="explode"
			hideEffect="bounce" height="300px" width="550px" modal="true"
			closable="true">
			<h:outputText value="des_dec" />
		</p:dialog>


		<h:form>


			<!--   ************************ menu that appear *************** -->
			<p:stack icon="/assets/images/stack.png">
				<p:menuitem value="Home" icon="/assets/images/home.png" url="#" />
				<p:menuitem value="Section" onclick="PF('sec').show();"
					icon="/assets/images/section.png" />
				<p:menuitem value="Lectures" icon="/assets/images/lecture.png"
					url="https://drive.google.com/drive/folders/0B6ns0aq69inlaXFPWkRVY3pMU0k" />
				<p:menuitem value="Exams" onclick="PF('exam').show();"
					icon="/assets/images/exam.png" />
				<p:menuitem value="Asci" onclick="PF('aski').show();"
					icon="/assets/images/table.png" />
			</p:stack>
		</h:form>


		<!-- ********************************* section ******************************* -->
		<p:dialog header="Section" widgetVar="sec" height="350px"
			width="800px" showEffect="explode" hideEffect="bounce" modal="true"
			closable="true">
			<p:contentFlow value="#{imagesView.images}" var="image">
				<p:graphicImage library="images/section" name="#{image}"
					styleClass="content" />
				<div class="caption">#{image}</div>
			</p:contentFlow>
		</p:dialog>

		<!-- ********************************* Exams ******************************* -->
		<p:dialog header="Exams" widgetVar="exam" height="350px" width="800px"
			showEffect="explode" hideEffect="bounce" modal="true" closable="true">
			<p:contentFlow value="#{imagesViewExam.images}" var="imageExam">
				<p:graphicImage library="images/exam" name="#{imageExam}"
					styleClass="content" />
				<div class="caption">#{imageExam}</div>

			</p:contentFlow>


		</p:dialog>
		<!-- ********************************* Aski ******************************* -->
		<p:dialog header="Aski" widgetVar="aski" minHeight="40"
			showEffect="explode" hideEffect="bounce" modal="true" closable="true">
			<h:outputText value="Aski" />
		</p:dialog>




	</h:body>

</f:view>



</html>

